// @import '~@angular/material/theming';

// Define a mixin that accepts a theme and outputs the theme-specific styles.
@mixin candy-carousel-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  // Define any styles affected by the theme.
  .candy-carousel {
    // Use mat-color to extract individual colors from a palette.
    background-color: mat-color($primary);
    border-color: mat-color($accent, A400);
  }
}


$config: mat-typography-config();

.unicorn-header {
  font-size: mat-font-size($config, headline);
  font-family: 'Roboto, monospace' ;// mat-font-family($config);
}

// Custom title that uses all of the typography styles from the `title` level.
.unicorn-title {
  @include mat-typography-level-to-styles($config, title);
}

/*$custom-typography: mat-typography-config(
        $font-family: 'Roboto, monospace',
        $headline: mat-typography-level(32px, 48px, 700),
        $body-1: mat-typography-level(9px, 24px, 500)
);*/


@mixin ml-file-tree-theme($theme) {

  $primary: map-get($theme, primary);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .ml-file-list {
    border-bottom: 1px solid mat-color($foreground, divider);
  }

  .ml-file-list-item {

    border-bottom: 1px solid mat-color($foreground, divider);
    &:hover, &:active, &:focus {
      background-color: mat-color($background, hover);
    }

    &.selected {
      background-color: mat-color($primary, lighter, 0.5);
      color: mat-color($foreground, text);
    }
  }
}
